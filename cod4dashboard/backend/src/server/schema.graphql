# import * from './generated/prisma.graphql'

type Player {
  playerID: Int
  playerGUID: String
  aliases: String
  firstActivityDate: Int
  lastActivityDate: Int
  firstActivityIP: String
  playerIP: String
  port: Int
  connections: Int
  onlineTime: Int
  online: Int
  punishmentScore: Int
  kills: Int
  deaths: Float
  headShots: Int
  teamKills: Int
  teamDeaths: Int
  selfKills: Int
  steamid: String
  pid: Int
  score: Int
  ping: Int
  name: String
  isVip: Int
  isAdmin: Int
  vipName: String
  adminName: String
}

type CodServerStatus {
  online: Boolean!
  hostname: String!
  version: String!
  os: String!
  type: String!
  map: String!
  onlinePlayers: [Player]!
}

type CodServerMiniStatus {
  online: Boolean!
  hostname: String!
  map: String!
  onlinePlayers: [Player]!
}

type Query {
  me: UserWithToken
  player(playerId: String!): Player
  codServerStatus: CodServerStatus!
  codServerMiniStatus: CodServerMiniStatus!
  searchPlayers(search: String!, limit: Int, offset: Int): [Player]!
  admins: [Player]!
  vips: [Player]!
}

type Mutation {
  signIn(email: String!, password: String!): UserWithToken
  signOut: Boolean!
  signUp(email: String!, username: String!, password: String!): UserWithToken
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  username: String!
  email: String!
  roles: [Role!]!
}

type UserWithToken {
  user: User
  token: String
}
